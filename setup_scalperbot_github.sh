#!/bin/bash
set -e

# --- CONFIGURATION ---
GITHUB_USER="saec-oolivvv"           # Ton nom d‚Äôutilisateur GitHub
GITHUB_REPO_NAME="scalperbot"        # Nom du d√©p√¥t GitHub
GITHUB_VISIBILITY="public"           # public ou private
GIT_USER_NAME="SAEC Expert"          # Nom Git pour Git
GIT_USER_EMAIL="sa.expert.consult@gmail.com" # Email Git pour GitHub

# Dossier du projet
PROJECT_DIR="$(pwd)"

echo "üü¢ Cr√©ation de la structure des dossiers du projet..."

# Cr√©e les dossiers principaux
mkdir -p backend frontend alembic traefik installer-electron

# Cr√©e des fichiers placeholders pour Git
touch backend/.gitkeep
touch frontend/.gitkeep
touch alembic/.gitkeep
touch traefik/.gitkeep
touch installer-electron/.gitkeep

echo "üü¢ Structure cr√©√©e avec succ√®s."

# --- Configuration Git ---
echo "üü¢ Configuration Git..."
git init || echo "Git d√©j√† initialis√©"
git config user.name "$GIT_USER_NAME"
git config user.email "$GIT_USER_EMAIL"

# --- Commit initial ---
echo "üü¢ Ajout des fichiers et commit initial..."
git add .
git commit -m "Initial commit - ScalperBot full version" || echo "Aucun nouveau commit √† cr√©er"

# --- D√©tecter si le d√©p√¥t GitHub existe ---
if gh repo view "$GITHUB_USER/$GITHUB_REPO_NAME" >/dev/null 2>&1; then
    echo "‚ÑπÔ∏è Le d√©p√¥t '$GITHUB_REPO_NAME' existe d√©j√†. Poussage dans le d√©p√¥t existant..."
    # Supprime l'ancien remote si n√©cessaire
    git remote remove origin 2>/dev/null || true
    git remote add origin "https://github.com/$GITHUB_USER/$GITHUB_REPO_NAME.git"
else
    echo "üü¢ Cr√©ation du d√©p√¥t GitHub via GitHub CLI..."
    gh repo create "$GITHUB_USER/$GITHUB_REPO_NAME" --"$GITHUB_VISIBILITY" --source="$PROJECT_DIR" --remote=origin --push
    exit 0
fi

# --- Pousser vers GitHub ---
echo "üü¢ Poussage des fichiers vers le d√©p√¥t existant..."
git push -u origin master

echo "‚úÖ D√©p√¥t GitHub mis √† jour avec succ√®s !"
echo "üåê Tu peux acc√©der √† ton repo : https://github.com/$GITHUB_USER/$GITHUB_REPO_NAME"
